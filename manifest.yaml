# Backend Hello Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-service-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-service
  template:
    metadata:
      labels:
        app: hello-service
    spec:
      containers:
        - name: hello-service
          image: "djag7/mernhelloservice:latest"
          imagePullPolicy: Always
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3001
              protocol: TCP
          env:
            - name: PORT
              value: "3001"

---

apiVersion: v1
kind: Service
metadata:
  name: hello-service-svc
spec:
  type: ClusterIP
  selector:
    app: hello-service
  ports:
    - port: 80
      targetPort: 3001

---

# Backend Profile Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profile-service-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profile-service
  template:
    metadata:
      labels:
        app: profile-service
    spec:
      containers:
        - name: profile-service
          image: "djag7/mernprofileservice:latest"
          imagePullPolicy: Always
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3002
              protocol: TCP
          env:
            - name: PORT
              value: "3002"
            - name: MONGO_URL
              value: "mongourl" #insert mongourl here
---

apiVersion: v1
kind: Service
metadata:
  name: profile-service-svc
spec:
  type: LoadBalancer
  selector:
    app: profile-service
  ports:
  - port: 80
    targetPort: 3002

---

# Front End
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: "djag7/mernfrontend:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: REACT_APP_SERVICE1_URL
              value: "http://domain1" #replace with your IP
            - name: REACT_APP_SERVICE2_URL
              value: "http://domain2" #replace with your IP
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 3000
